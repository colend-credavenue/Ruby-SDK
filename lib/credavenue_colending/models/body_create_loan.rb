=begin
#Allcloud (Allcloud)

## Integration Document  The following are the endpoints to be called during and pre/post disbursement state of a loan.  ## Authentication  Authentication details and host will be shared privately.  ## Workflow  **Create Loan** is the initial endpoint to be called to create a loan. Loan will be processed in the background and the status of loan will be provided through the configured Webhook. However, the client can also poll the server via the **Get Loan Details** endpoint to know the loan's status(**Get Loan Details** is rate throttled and polling this API will be restricted). Loan's shall be considered rejected if proper response is not available within 10minutes.  All other endpoints are self-explanatory and can be retried upto 3 times before marking as failure.  ## Allowed Links  All Link attributes should contain 1. Accessible File Link URL which can be Public/Expiry URL/Whitelisted File Server Link(Write to tech.colending@credavenue.com for obtaining our IP address to whitelist) 2. File Link URL with Header Authentication (Header values should be shared with tech.colending@credavenue.com)  ## Allowed Fields Length <table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">  <colgroup>  <col  class=\"org-left\" />  <col  class=\"org-left\" />  </colgroup> <thead> <tr> <th scope=\"col\" class=\"org-left\">Data Type</th> <th scope=\"col\" class=\"org-left\">Max Length</th> </tr> </thead>  <tbody> <tr> <td class=\"org-left\">String</td> <td class=\"org-left\">65,535 bytes</td> </tr>  <tr> <td class=\"org-left\">Float</td> <td class=\"org-left\">8 bytes</td> </tr>  <tr> <td class=\"org-left\">Integer</td> <td class=\"org-left\">4 bytes</td> </tr>  <tr> <td class=\"org-left\">Date</td> <td class=\"org-left\">10 characters</td> </tr>  </tbody> </table>  # Webhooks  Webhooks can be configured for the below events  1. Loan status change      Response Payload :      {         \"product_id\": \"\",         \"client_loan_id\": \"\",         \"principal_amount\": \"\",         \"interest_rate\": \"\",         \"tenure\": \"\",         \"tenure_frequency\": \"MONTHLY\",         \"cibil_score\": \"\",         \"purpose\": \"\",         \"repayment_frequency\":\"\",         \"number_of_repayments\": \"\",         \"status\": \"\",         \"principal_outstanding\": \"\",         \"reject_reason\": \"\"     }          Statuses : ['new', 'approved', 'rejected', 'agreement_signed', 'dropped', 'disbursement_ready', 'disbursed', 'matured', 'partner_settled']     2. Loan disbursement details (Disbursed through razorpay)      Callback Payload:      {         \"client_loan_id\":\"\",         \"status\":\"borrower_disbursed\",         \"disbursed_date\":\"\",         \"utr_number\":\"\",         \"disbursement_type\":\"\",         \"payment_reversed\": \"TRUE/FALSE\",         \"disbursement_amount\":\"\",         \"investor_disbursed_amount\": \"\",         \"partner_disbursed_amount\": \"\",         \"differential_interest\":\"\",         \"investor_differential_interest\":\"\",         \"partner_differential_interest\":\"\",         \"differential_days\":\"\",         \"interest_start_date\":\"\",         \"investor_processing_fee\":\"\",         \"partner_processing_fee\":\"\",         \"investor_stamp_duty\":\"\",         \"partner_stamp_duty\":\"\",         \"investor_documentation_charges\":\"\",         \"partner_documentation_charges\":\"\"     }  Provide the following details to configure the webhooks 1. callback URL 2. authentication for the callback URL (header authentication)    # Validations  **PAN**  - **Example**: ABGPA1232P - **Sequence**: First five digits will be alpha, next four will be Numerical and again last single digit will be alpha  **GSTIN**  - **Example**: 33AAACT2727Q1ZV - **Sequence**: First two digits is Numerical, Next is PAN sequence as specified above, again thirteenth digit will be numerical, fourteenth digit is alpha, last digit will be alpha or numerical  **CIN**  - **Example**: U65929TN2017PTC117196 - **Sequence**: First digit is Alpha, next 5 numeric digits, next two alpha, next set of 4 numeric digits, Next 3 alpha, last 6 numeric digits  **PASSPORT**  - **Example**: A2096457 - **Sequence**: Total 8 digits, first digit is Alpha, remaining digits are numerical  **AADHAR NO**  - The standard 12 digits numerical.  **MOBILE NO**  - **Sequence**: 10 numerical digits  **IFSC CODE**  - **Example**: PUNB0596600 - **Sequence**: First four alpha, next fifth digit is 0 (zero) always and last six digit is alpha/numeric. Totally 11 digits.  **PIN CODE**  - 6 numerical digits

OpenAPI spec version: 0.0.1
Contact: support@colending.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.29
=end

require 'date'

module Colending
  class BodyCreateLoan
    # Individual / Corporate
    attr_accessor :customer_type

    # Salaried, Self-Empolyed
    attr_accessor :customer_category

    # Customer id as per partners CRM/LOS
    attr_accessor :client_customer_id

    # Mr / Ms
    attr_accessor :title

    # First Name of the Customer
    attr_accessor :first_name

    # Middle Name of the Customer
    attr_accessor :middle_name

    # Last Name of the Customer
    attr_accessor :last_name

    # M / F / O
    attr_accessor :gender

    # Date of birth in YYYY-MM-DD
    attr_accessor :date_of_birth

    # Age in years
    attr_accessor :age

    # Mobile Number of the Customer (10 digits)
    attr_accessor :mobile_number

    # Contact Number of the Customer
    attr_accessor :phone_number

    # Permanent Email id of the Customer
    attr_accessor :email

    # Official Email ID of the Customer
    attr_accessor :official_email_id

    # Place of birth of the Customer
    attr_accessor :place_of_birth

    # Current address of the applicant. Free flowing text
    attr_accessor :current_address

    # Village in which applicant is currently residing. Free flowing for now
    attr_accessor :current_village

    # tier_1, tier_2 etc. for the current city
    attr_accessor :current_city_tier

    # City in which applicant is currently residing. Free flowing for now
    attr_accessor :current_city

    # District in which applicant is currently residing. Free flowing for now
    attr_accessor :current_district

    # State in which applicant is currently residing. Free flowing for now
    attr_accessor :current_state

    # Country in which applicant is currently residing. Free flowing for now
    attr_accessor :current_country

    # Pincode of the current address
    attr_accessor :current_pincode

    # rented / owned / leased
    attr_accessor :residence_type_current_address

    # How many years stayed in the current address
    attr_accessor :years_of_stay_in_current_address

    # Permanent address of the customer. Free flowing for now
    attr_accessor :permanent_address

    # Permanent city of the customer. Free flowing for now
    attr_accessor :permanent_city

    # tier_1, tier_2 etc. for the permanent city
    attr_accessor :permanent_city_tier

    # Permanent district of the customer. Free flowing for now
    attr_accessor :permanent_district

    # Permanent state of the customer. Free flowing for now
    attr_accessor :permanent_state

    # Permanent pincode of the customer. Free flowing for now
    attr_accessor :permanent_pincode

    # rented / owned / leased
    attr_accessor :residence_type_permanent_address

    # How many years stayed in the permanent address
    attr_accessor :years_of_stay_in_permanent_address

    # Mailing address of the customer. Free flowing text
    attr_accessor :mailing_address

    # married / unmarried
    attr_accessor :marital_status

    # Religion of customer. Free flow text
    attr_accessor :religion

    # Nationality of customer. Free flow text
    attr_accessor :nationality

    # Father name of customer. Free flow text
    attr_accessor :father_name

    # Mother name of customer; Free flow text
    attr_accessor :mother_name

    # Spouse name of customer; Free flow text
    attr_accessor :spouse_name

    # Educational Qualifications
    attr_accessor :education_qualification

    # Monthly Income of the Customer (in Rupees)
    attr_accessor :net_monthly_income

    # Annual income of the customer in number (donâ€™t convert into thousand/lacs etc)
    attr_accessor :annual_income

    # Number of dependants
    attr_accessor :no_of_dependants

    # salaried / business / retired / self_employed and others
    attr_accessor :occupation

    # Partner score
    attr_accessor :partner_score_on_the_customer

    # Political Exposure of the Customer
    attr_accessor :politically_exposed

    # Cash / Cheque / Fund transfer
    attr_accessor :income_source

    # Profession of the Customer
    attr_accessor :applicant_profession

    # Is the customer categories as a negative profile?
    attr_accessor :caution_negative_profile

    # Udyam Number of the Customer
    attr_accessor :udyam_number

    # Result of the pan check
    attr_accessor :pan_check

    # Result of the dedupe
    attr_accessor :dedupe_status

    # PAN number of customer
    attr_accessor :pan_number

    # PAN image of the document
    attr_accessor :pan_number_link

    # PAN image password
    attr_accessor :pan_number_link_password

    # Form 60 If applicable
    attr_accessor :form_60_link

    # Form 60 password If applicable
    attr_accessor :form_60_link_password

    # Aadhar number of customer
    attr_accessor :aadhar_number

    # Aadhar image of the document
    attr_accessor :aadhar_number_link

    # Aadhar image password
    attr_accessor :aadhar_number_link_password

    # Voter ID Number of customer
    attr_accessor :voter_id_number

    # Voter ID image of the document
    attr_accessor :voting_id_link

    # Voter ID image password
    attr_accessor :voting_id_link_password

    # Driving license number of customer
    attr_accessor :driving_license_number

    # Driving License image of the document
    attr_accessor :driving_license_number_link

    # Driving license image password
    attr_accessor :driving_license_number_link_password

    # Expiry date of driving license
    attr_accessor :driving_license_expiry_date

    # Passport number of customer
    attr_accessor :passport_number

    # Passport image of the document
    attr_accessor :passport_number_link

    # Passport image password
    attr_accessor :passport_number_link_password

    # Video KYC of the Applicant
    attr_accessor :video_image_link

    # Video KYC link password
    attr_accessor :video_image_link_password

    attr_accessor :video_kyc_detail

    # KYC Number of the Customer
    attr_accessor :other_kyc_number

    # KYC Image of the Customer
    attr_accessor :other_kyc_link

    # KYC Image link password
    attr_accessor :other_kyc_link_password

    # KYC number of customer
    attr_accessor :rent_agreement_link

    # Rent agreement link password
    attr_accessor :rent_agreement_link_password

    # Utility bills link
    attr_accessor :utility_bills_link

    # Utility bills link password
    attr_accessor :utility_bills_link_password

    # Photo Image of the Customer
    attr_accessor :photo_link

    # Photo Image password
    attr_accessor :photo_link_password

    # tier_1, tier_2 etc. for  the employer
    attr_accessor :employer_tier

    # Category of the employer
    attr_accessor :employer_category

    # salaried / self_employed
    attr_accessor :employment_type

    # Employer name. Free flowing text
    attr_accessor :employment_details_name

    # Office address. Free flowing text
    attr_accessor :employment_details_address

    # Applicant Number of years in the current organization
    attr_accessor :employment_details_years_of_experience

    # Designation in current role, free flowing text
    attr_accessor :employment_details_designation

    # No of Years in the same Organisation
    attr_accessor :employement_vintage_current_organisation

    # Total years of experience
    attr_accessor :total_work_experience

    # Last three month pay slip
    attr_accessor :payslip_link

    # Last three month pay slip link password
    attr_accessor :payslip_link_password

    # Last Three Year TDS Certificate Link
    attr_accessor :tds_certificate_link

    # Last Three Year TDS Certificate Link
    attr_accessor :tds_certificate_link_password

    attr_accessor :business

    # Refer table Guarantors for attributes
    attr_accessor :guarantors

    # Refer table CoApplicants for attributes
    attr_accessor :co_applicants

    attr_accessor :bank_statement

    # Cibil / Experian / Himark
    attr_accessor :name_of_bureau

    # Vintage in the bureau. Number of years from the first trade line
    attr_accessor :bureau_vintage

    # Bureau Score
    attr_accessor :bureau_score

    # Document of the bureau
    attr_accessor :bureau_report_json_link

    # Document of the bureau - Password
    attr_accessor :bureau_report_json_link_password

    # Bureau Json placed in a link
    attr_accessor :bureau_json_link

    # Bureau Json placed in a link - Password
    attr_accessor :bureau_json_link_password

    # Bureau Json response
    attr_accessor :bureau_json

    # CRIF score
    attr_accessor :commercial_bureau_score

    # Commercial Bureau Document
    attr_accessor :commercial_bureau_score_link

    # Commercial Bureau Document Password
    attr_accessor :commercial_bureau_score_link_password

    # Score Captured by the Partner
    attr_accessor :partner_score_on_the_customer_including_bureau_report

    # Total Existing Obligations basis the Bureau Report
    attr_accessor :total_existing_obligations

    # Total Credit Card Limit basis the Bureau Report
    attr_accessor :credit_card_limit

    # Total Number of Credit Cards per Bureau Report
    attr_accessor :no_of_credit_cards

    # Total Number of Unsecured Loans per Bureau Report
    attr_accessor :total_number_of_unsecured_loans

    # Total value of unsecured loans
    attr_accessor :value_of_total_unsecured_loans

    # Total Number of Loans per Bureau Report
    attr_accessor :total_number_of_loans

    # Total value of loans
    attr_accessor :value_of_total_loans

    # Number of Enquiries in the Last 3 Months per Bureau Report
    attr_accessor :number_of_enquiries_3months

    # Number of Enquiries in the Last 6 Months per Bureau Report
    attr_accessor :number_of_enquiries_6months

    # Number of Enquiries in the Last 12 Months per Bureau Report
    attr_accessor :number_of_enquiries_12months

    # Number of Writeoff Suitfiled Settled in the Last 12 Months
    attr_accessor :number_of_writeoff_suitfiled_settled_in_the_last_12_months

    # Maximum DPD Tradeline in the Last 12 Months
    attr_accessor :max_dpd_tradeline_last_12months

    # Maximum Overdue Tradeline
    attr_accessor :max_overdue_tradeline

    # Total Overdue Amount in the Last 12 Months
    attr_accessor :total_overdue_amount_in_last_12m

    # Loan Amount Settled in the Last 12 Months
    attr_accessor :amount_of_loan_settled_in_last_12m

    # The nature of past loan settlement if any (Loan 1) - Settled/ Closed/ Written-off
    attr_accessor :nature_of_loan_settled1

    # The nature of past loan settlement if any (Loan 2) - Settled/ Closed/ Written-off
    attr_accessor :nature_of_loan_settled2

    # Total EMI Bounces
    attr_accessor :total_emi_bounces

    # EMI Bounces in the Last 6 Months
    attr_accessor :bounces_in_last_6m

    # EMI Bounces in the Last 12 Months
    attr_accessor :bounces_in_last_12m

    # Validity of bureau report
    attr_accessor :bureau_validity_date

    attr_accessor :financial_data

    # Average Bank balance to EMI
    attr_accessor :abb_emi_ratio

    # Debt Service Coverage Ratio
    attr_accessor :dscr

    # Fixed Obligations to Income Ratio
    attr_accessor :foir

    # Loan Transfer Ratio
    attr_accessor :ltr

    # INSR
    attr_accessor :insr

    # Eligibility as per INSR
    attr_accessor :eligibility_as_per_insr

    # Eligibility as per FOIR
    attr_accessor :eligibility_as_per_foir

    # Eligibility as per LTV
    attr_accessor :eligibility_as_per_ltv

    # Eligibility Loan amount
    attr_accessor :eligibility_loan_amount

    # Free Cash Flows
    attr_accessor :fcf

    # Existing EMI obligations
    attr_accessor :emi_obligations

    # Net Assets/ Debt
    attr_accessor :viability_ratio

    # Product ID created in CA
    attr_accessor :product_id

    # Loan ID as per Partner&#39;s LMS
    attr_accessor :client_loan_id

    # Application ID as per Partner&#39;s CRM/LOS
    attr_accessor :application_id

    # Denotes the Cycle number of the loan given to the borrower
    attr_accessor :loan_cycle

    # Branch Code as per Partner&#39;s LOS
    attr_accessor :partner_branch_code

    # Branch Name as per Partner&#39;s LOS
    attr_accessor :partner_branch_name

    attr_accessor :product_type

    # Product code as per partners LOS/LMS
    attr_accessor :partner_product_code

    attr_accessor :partner_scheme_code

    # secured / unsecured
    attr_accessor :category

    # bt / top_up / fresh
    attr_accessor :sub_category

    # Free flowing text
    attr_accessor :purpose

    # Tranche / Single Disbursement
    attr_accessor :disbursement_type

    # Total number of Tranches
    attr_accessor :number_of_tranches

    # End borrower amount in case of multiple disbursals
    attr_accessor :end_borrower_amount

    # Existing Lender Amount in case of multiple disbursals
    attr_accessor :existing_lender_amount

    # Total loan amount in Rs (Overall amount to the borrower)
    attr_accessor :principal_amount

    # Reducing balance interest rate of the customer in %. This is the interest rate to be mentioned in the sanction letter as well
    attr_accessor :interest_rate

    # Interest Type of the Loan
    attr_accessor :interest_type

    # Tenure of the loan
    attr_accessor :tenure

    # Whether the tenure is monthly/yearly/weekly
    attr_accessor :tenure_frequency

    # Daily/Weekly/Once in 2 weeks/Monthly/Quarterly/Bullet
    attr_accessor :repayment_frequency

    # Number of repayments as per the repayment schedule
    attr_accessor :number_of_repayments

    # First repayment date as per the repayment schedule (YYYY-MM-DD)
    attr_accessor :first_repayment_date

    # Cash / NACH
    attr_accessor :repayment_mode

    # Advance EMI Amount (If collected any)
    attr_accessor :advance_emi

    # To update if UMRN generated at this stage, else in PDD stage
    attr_accessor :umrn

    # Pre Emi interest due date
    attr_accessor :interest_start_date

    # Broken Period Interest Amount (in Rupees)
    attr_accessor :differential_interest

    # Processing Fee (Inclusive of GST)
    attr_accessor :processing_fee

    # Stamp duty amount
    attr_accessor :stamp_duty

    # Insurance premium inclusive of GST
    attr_accessor :insurance_charges

    # Total documentation charges inclusive of GST
    attr_accessor :documentation_charges

    # Any Other Charges Inclusive of GST
    attr_accessor :other_charges

    attr_accessor :loan_plr_type

    # Prime Lending Rate of the loan
    attr_accessor :loan_plr_rate

    attr_accessor :spread_id

    # EMI of the loan
    attr_accessor :loan_emi

    # Document Verification Status (Y/N)
    attr_accessor :rcu_status

    # Surrogate
    attr_accessor :surrogate

    # Sub Class
    attr_accessor :sub_class

    # Whether the borrower belongs to the weaker section as defined under RBI norms
    attr_accessor :weaker_section

    # Refer table DisbursementAccounts for attributes
    attr_accessor :disbursement_accounts

    # Refer table Assets for attributes
    attr_accessor :assets

    # Refer table References for attributes
    attr_accessor :references

    # Refer table InsuranceDetails for attributes
    attr_accessor :insurance_details

    # Does this loan belong to Priority Sector Lending?
    attr_accessor :psl_flag

    # Description on Priority Sector Lending
    attr_accessor :psl_description

    # Priority Sector Lending code
    attr_accessor :psl_code

    # Any documents as proof for PSL
    attr_accessor :psl_proof_link

    # Document Password
    attr_accessor :psl_proof_link_password

    # Refer table Tranches for attributes
    attr_accessor :tranches

    # Refer table LinkedLoanInfos for attributes
    attr_accessor :linked_loan_infos

    attr_accessor :sourcing_detail

    # # Refer table Consumer Durable for attributes
    attr_accessor :consumer_durable

    # Refer table DeviationDetails for attributes
    attr_accessor :deviation_details

    # Attribute mapping from ruby-style variable name to JSON key.
    def self.attribute_map
      {
        :'customer_type' => :'customer_type',
        :'customer_category' => :'customer_category',
        :'client_customer_id' => :'client_customer_id',
        :'title' => :'title',
        :'first_name' => :'first_name',
        :'middle_name' => :'middle_name',
        :'last_name' => :'last_name',
        :'gender' => :'gender',
        :'date_of_birth' => :'date_of_birth',
        :'age' => :'age',
        :'mobile_number' => :'mobile_number',
        :'phone_number' => :'phone_number',
        :'email' => :'email',
        :'official_email_id' => :'official_email_id',
        :'place_of_birth' => :'place_of_birth',
        :'current_address' => :'current_address',
        :'current_village' => :'current_village',
        :'current_city_tier' => :'current_city_tier',
        :'current_city' => :'current_city',
        :'current_district' => :'current_district',
        :'current_state' => :'current_state',
        :'current_country' => :'current_country',
        :'current_pincode' => :'current_pincode',
        :'residence_type_current_address' => :'residence_type_current_address',
        :'years_of_stay_in_current_address' => :'years_of_stay_in_current_address',
        :'permanent_address' => :'permanent_address',
        :'permanent_city' => :'permanent_city',
        :'permanent_city_tier' => :'permanent_city_tier',
        :'permanent_district' => :'permanent_district',
        :'permanent_state' => :'permanent_state',
        :'permanent_pincode' => :'permanent_pincode',
        :'residence_type_permanent_address' => :'residence_type_permanent_address',
        :'years_of_stay_in_permanent_address' => :'years_of_stay_in_permanent_address',
        :'mailing_address' => :'mailing_address',
        :'marital_status' => :'marital_status',
        :'religion' => :'religion',
        :'nationality' => :'nationality',
        :'father_name' => :'father_name',
        :'mother_name' => :'mother_name',
        :'spouse_name' => :'spouse_name',
        :'education_qualification' => :'education_qualification',
        :'net_monthly_income' => :'net_monthly_income',
        :'annual_income' => :'annual_income',
        :'no_of_dependants' => :'no_of_dependants',
        :'occupation' => :'occupation',
        :'partner_score_on_the_customer' => :'partner_score_on_the_customer',
        :'politically_exposed' => :'politically_exposed',
        :'income_source' => :'income_source',
        :'applicant_profession' => :'applicant_profession',
        :'caution_negative_profile' => :'caution_negative_profile',
        :'udyam_number' => :'udyam_number',
        :'pan_check' => :'pan_check',
        :'dedupe_status' => :'dedupe_status',
        :'pan_number' => :'pan_number',
        :'pan_number_link' => :'pan_number_link',
        :'pan_number_link_password' => :'pan_number_link_password',
        :'form_60_link' => :'form_60_link',
        :'form_60_link_password' => :'form_60_link_password',
        :'aadhar_number' => :'aadhar_number',
        :'aadhar_number_link' => :'aadhar_number_link',
        :'aadhar_number_link_password' => :'aadhar_number_link_password',
        :'voter_id_number' => :'voter_id_number',
        :'voting_id_link' => :'voting_id_link',
        :'voting_id_link_password' => :'voting_id_link_password',
        :'driving_license_number' => :'driving_license_number',
        :'driving_license_number_link' => :'driving_license_number_link',
        :'driving_license_number_link_password' => :'driving_license_number_link_password',
        :'driving_license_expiry_date' => :'driving_license_expiry_date',
        :'passport_number' => :'passport_number',
        :'passport_number_link' => :'passport_number_link',
        :'passport_number_link_password' => :'passport_number_link_password',
        :'video_image_link' => :'video_image_link',
        :'video_image_link_password' => :'video_image_link_password',
        :'video_kyc_detail' => :'video_kyc_detail',
        :'other_kyc_number' => :'other_kyc_number',
        :'other_kyc_link' => :'other_kyc_link',
        :'other_kyc_link_password' => :'other_kyc_link_password',
        :'rent_agreement_link' => :'rent_agreement_link',
        :'rent_agreement_link_password' => :'rent_agreement_link_password',
        :'utility_bills_link' => :'utility_bills_link',
        :'utility_bills_link_password' => :'utility_bills_link_password',
        :'photo_link' => :'photo_link',
        :'photo_link_password' => :'photo_link_password',
        :'employer_tier' => :'employer_tier',
        :'employer_category' => :'employer_category',
        :'employment_type' => :'employment_type',
        :'employment_details_name' => :'employment_details_name',
        :'employment_details_address' => :'employment_details_address',
        :'employment_details_years_of_experience' => :'employment_details_years_of_experience',
        :'employment_details_designation' => :'employment_details_designation',
        :'employement_vintage_current_organisation' => :'employement_vintage_current_organisation',
        :'total_work_experience' => :'total_work_experience',
        :'payslip_link' => :'payslip_link',
        :'payslip_link_password' => :'payslip_link_password',
        :'tds_certificate_link' => :'tds_certificate_link',
        :'tds_certificate_link_password' => :'tds_certificate_link_password',
        :'business' => :'business',
        :'guarantors' => :'guarantors',
        :'co_applicants' => :'co_applicants',
        :'bank_statement' => :'bank_statement',
        :'name_of_bureau' => :'name_of_bureau',
        :'bureau_vintage' => :'bureau_vintage',
        :'bureau_score' => :'bureau_score',
        :'bureau_report_json_link' => :'bureau_report_json_link',
        :'bureau_report_json_link_password' => :'bureau_report_json_link_password',
        :'bureau_json_link' => :'bureau_json_link',
        :'bureau_json_link_password' => :'bureau_json_link_password',
        :'bureau_json' => :'bureau_json',
        :'commercial_bureau_score' => :'commercial_bureau_score',
        :'commercial_bureau_score_link' => :'commercial_bureau_score_link',
        :'commercial_bureau_score_link_password' => :'commercial_bureau_score_link_password',
        :'partner_score_on_the_customer_including_bureau_report' => :'partner_score_on_the_customer_including_bureau_report',
        :'total_existing_obligations' => :'total_existing_obligations',
        :'credit_card_limit' => :'credit_card_limit',
        :'no_of_credit_cards' => :'no_of_credit_cards',
        :'total_number_of_unsecured_loans' => :'total_number_of_unsecured_loans',
        :'value_of_total_unsecured_loans' => :'value_of_total_unsecured_loans',
        :'total_number_of_loans' => :'total_number_of_loans',
        :'value_of_total_loans' => :'value_of_total_loans',
        :'number_of_enquiries_3months' => :'number_of_enquiries_3months',
        :'number_of_enquiries_6months' => :'number_of_enquiries_6months',
        :'number_of_enquiries_12months' => :'number_of_enquiries_12months',
        :'number_of_writeoff_suitfiled_settled_in_the_last_12_months' => :'number_of_writeoff_suitfiled_settled_in_the_last_12_months',
        :'max_dpd_tradeline_last_12months' => :'max_dpd_tradeline_last_12months',
        :'max_overdue_tradeline' => :'max_overdue_tradeline',
        :'total_overdue_amount_in_last_12m' => :'total_overdue_amount_in_last_12m',
        :'amount_of_loan_settled_in_last_12m' => :'amount_of_loan_settled_in_last_12m',
        :'nature_of_loan_settled1' => :'nature_of_loan_settled1',
        :'nature_of_loan_settled2' => :'nature_of_loan_settled2',
        :'total_emi_bounces' => :'total_emi_bounces',
        :'bounces_in_last_6m' => :'bounces_in_last_6m',
        :'bounces_in_last_12m' => :'bounces_in_last_12m',
        :'bureau_validity_date' => :'bureau_validity_date',
        :'financial_data' => :'financial_data',
        :'abb_emi_ratio' => :'abb_emi_ratio',
        :'dscr' => :'dscr',
        :'foir' => :'foir',
        :'ltr' => :'ltr',
        :'insr' => :'insr',
        :'eligibility_as_per_insr' => :'eligibility_as_per_insr',
        :'eligibility_as_per_foir' => :'eligibility_as_per_foir',
        :'eligibility_as_per_ltv' => :'eligibility_as_per_ltv',
        :'eligibility_loan_amount' => :'eligibility_loan_amount',
        :'fcf' => :'fcf',
        :'emi_obligations' => :'emi_obligations',
        :'viability_ratio' => :'viability_ratio',
        :'product_id' => :'product_id',
        :'client_loan_id' => :'client_loan_id',
        :'application_id' => :'application_id',
        :'loan_cycle' => :'loan_cycle',
        :'partner_branch_code' => :'partner_branch_code',
        :'partner_branch_name' => :'partner_branch_name',
        :'product_type' => :'product_type',
        :'partner_product_code' => :'partner_product_code',
        :'partner_scheme_code' => :'partner_scheme_code',
        :'category' => :'category',
        :'sub_category' => :'sub_category',
        :'purpose' => :'purpose',
        :'disbursement_type' => :'disbursement_type',
        :'number_of_tranches' => :'number_of_tranches',
        :'end_borrower_amount' => :'end_borrower_amount',
        :'existing_lender_amount' => :'existing_lender_amount',
        :'principal_amount' => :'principal_amount',
        :'interest_rate' => :'interest_rate',
        :'interest_type' => :'interest_type',
        :'tenure' => :'tenure',
        :'tenure_frequency' => :'tenure_frequency',
        :'repayment_frequency' => :'repayment_frequency',
        :'number_of_repayments' => :'number_of_repayments',
        :'first_repayment_date' => :'first_repayment_date',
        :'repayment_mode' => :'repayment_mode',
        :'advance_emi' => :'advance_emi',
        :'umrn' => :'umrn',
        :'interest_start_date' => :'interest_start_date',
        :'differential_interest' => :'differential_interest',
        :'processing_fee' => :'processing_fee',
        :'stamp_duty' => :'stamp_duty',
        :'insurance_charges' => :'insurance_charges',
        :'documentation_charges' => :'documentation_charges',
        :'other_charges' => :'other_charges',
        :'loan_plr_type' => :'loan_plr_type',
        :'loan_plr_rate' => :'loan_plr_rate',
        :'spread_id' => :'spread_id',
        :'loan_emi' => :'loan_emi',
        :'rcu_status' => :'rcu_status',
        :'surrogate' => :'surrogate',
        :'sub_class' => :'sub_class',
        :'weaker_section' => :'weaker_section',
        :'disbursement_accounts' => :'disbursement_accounts',
        :'assets' => :'assets',
        :'references' => :'references',
        :'insurance_details' => :'insurance_details',
        :'psl_flag' => :'psl_flag',
        :'psl_description' => :'psl_description',
        :'psl_code' => :'psl_code',
        :'psl_proof_link' => :'psl_proof_link',
        :'psl_proof_link_password' => :'psl_proof_link_password',
        :'tranches' => :'tranches',
        :'linked_loan_infos' => :'linked_loan_infos',
        :'sourcing_detail' => :'sourcing_detail',
        :'consumer_durable' => :'consumer_durable',
        :'deviation_details' => :'deviation_details'
      }
    end

    # Attribute type mapping.
    def self.openapi_types
      {
        :'customer_type' => :'Object',
        :'customer_category' => :'Object',
        :'client_customer_id' => :'Object',
        :'title' => :'Object',
        :'first_name' => :'Object',
        :'middle_name' => :'Object',
        :'last_name' => :'Object',
        :'gender' => :'Object',
        :'date_of_birth' => :'Object',
        :'age' => :'Object',
        :'mobile_number' => :'Object',
        :'phone_number' => :'Object',
        :'email' => :'Object',
        :'official_email_id' => :'Object',
        :'place_of_birth' => :'Object',
        :'current_address' => :'Object',
        :'current_village' => :'Object',
        :'current_city_tier' => :'Object',
        :'current_city' => :'Object',
        :'current_district' => :'Object',
        :'current_state' => :'Object',
        :'current_country' => :'Object',
        :'current_pincode' => :'Object',
        :'residence_type_current_address' => :'Object',
        :'years_of_stay_in_current_address' => :'Object',
        :'permanent_address' => :'Object',
        :'permanent_city' => :'Object',
        :'permanent_city_tier' => :'Object',
        :'permanent_district' => :'Object',
        :'permanent_state' => :'Object',
        :'permanent_pincode' => :'Object',
        :'residence_type_permanent_address' => :'Object',
        :'years_of_stay_in_permanent_address' => :'Object',
        :'mailing_address' => :'Object',
        :'marital_status' => :'Object',
        :'religion' => :'Object',
        :'nationality' => :'Object',
        :'father_name' => :'Object',
        :'mother_name' => :'Object',
        :'spouse_name' => :'Object',
        :'education_qualification' => :'Object',
        :'net_monthly_income' => :'Object',
        :'annual_income' => :'Object',
        :'no_of_dependants' => :'Object',
        :'occupation' => :'Object',
        :'partner_score_on_the_customer' => :'Object',
        :'politically_exposed' => :'Object',
        :'income_source' => :'Object',
        :'applicant_profession' => :'Object',
        :'caution_negative_profile' => :'Object',
        :'udyam_number' => :'Object',
        :'pan_check' => :'Object',
        :'dedupe_status' => :'Object',
        :'pan_number' => :'Object',
        :'pan_number_link' => :'Object',
        :'pan_number_link_password' => :'Object',
        :'form_60_link' => :'Object',
        :'form_60_link_password' => :'Object',
        :'aadhar_number' => :'Object',
        :'aadhar_number_link' => :'Object',
        :'aadhar_number_link_password' => :'Object',
        :'voter_id_number' => :'Object',
        :'voting_id_link' => :'Object',
        :'voting_id_link_password' => :'Object',
        :'driving_license_number' => :'Object',
        :'driving_license_number_link' => :'Object',
        :'driving_license_number_link_password' => :'Object',
        :'driving_license_expiry_date' => :'Object',
        :'passport_number' => :'Object',
        :'passport_number_link' => :'Object',
        :'passport_number_link_password' => :'Object',
        :'video_image_link' => :'Object',
        :'video_image_link_password' => :'Object',
        :'video_kyc_detail' => :'Object',
        :'other_kyc_number' => :'Object',
        :'other_kyc_link' => :'Object',
        :'other_kyc_link_password' => :'Object',
        :'rent_agreement_link' => :'Object',
        :'rent_agreement_link_password' => :'Object',
        :'utility_bills_link' => :'Object',
        :'utility_bills_link_password' => :'Object',
        :'photo_link' => :'Object',
        :'photo_link_password' => :'Object',
        :'employer_tier' => :'Object',
        :'employer_category' => :'Object',
        :'employment_type' => :'Object',
        :'employment_details_name' => :'Object',
        :'employment_details_address' => :'Object',
        :'employment_details_years_of_experience' => :'Object',
        :'employment_details_designation' => :'Object',
        :'employement_vintage_current_organisation' => :'Object',
        :'total_work_experience' => :'Object',
        :'payslip_link' => :'Object',
        :'payslip_link_password' => :'Object',
        :'tds_certificate_link' => :'Object',
        :'tds_certificate_link_password' => :'Object',
        :'business' => :'Object',
        :'guarantors' => :'Object',
        :'co_applicants' => :'Object',
        :'bank_statement' => :'Object',
        :'name_of_bureau' => :'Object',
        :'bureau_vintage' => :'Object',
        :'bureau_score' => :'Object',
        :'bureau_report_json_link' => :'Object',
        :'bureau_report_json_link_password' => :'Object',
        :'bureau_json_link' => :'Object',
        :'bureau_json_link_password' => :'Object',
        :'bureau_json' => :'Object',
        :'commercial_bureau_score' => :'Object',
        :'commercial_bureau_score_link' => :'Object',
        :'commercial_bureau_score_link_password' => :'Object',
        :'partner_score_on_the_customer_including_bureau_report' => :'Object',
        :'total_existing_obligations' => :'Object',
        :'credit_card_limit' => :'Object',
        :'no_of_credit_cards' => :'Object',
        :'total_number_of_unsecured_loans' => :'Object',
        :'value_of_total_unsecured_loans' => :'Object',
        :'total_number_of_loans' => :'Object',
        :'value_of_total_loans' => :'Object',
        :'number_of_enquiries_3months' => :'Object',
        :'number_of_enquiries_6months' => :'Object',
        :'number_of_enquiries_12months' => :'Object',
        :'number_of_writeoff_suitfiled_settled_in_the_last_12_months' => :'Object',
        :'max_dpd_tradeline_last_12months' => :'Object',
        :'max_overdue_tradeline' => :'Object',
        :'total_overdue_amount_in_last_12m' => :'Object',
        :'amount_of_loan_settled_in_last_12m' => :'Object',
        :'nature_of_loan_settled1' => :'Object',
        :'nature_of_loan_settled2' => :'Object',
        :'total_emi_bounces' => :'Object',
        :'bounces_in_last_6m' => :'Object',
        :'bounces_in_last_12m' => :'Object',
        :'bureau_validity_date' => :'Object',
        :'financial_data' => :'Object',
        :'abb_emi_ratio' => :'Object',
        :'dscr' => :'Object',
        :'foir' => :'Object',
        :'ltr' => :'Object',
        :'insr' => :'Object',
        :'eligibility_as_per_insr' => :'Object',
        :'eligibility_as_per_foir' => :'Object',
        :'eligibility_as_per_ltv' => :'Object',
        :'eligibility_loan_amount' => :'Object',
        :'fcf' => :'Object',
        :'emi_obligations' => :'Object',
        :'viability_ratio' => :'Object',
        :'product_id' => :'Object',
        :'client_loan_id' => :'Object',
        :'application_id' => :'Object',
        :'loan_cycle' => :'Object',
        :'partner_branch_code' => :'Object',
        :'partner_branch_name' => :'Object',
        :'product_type' => :'Object',
        :'partner_product_code' => :'Object',
        :'partner_scheme_code' => :'Object',
        :'category' => :'Object',
        :'sub_category' => :'Object',
        :'purpose' => :'Object',
        :'disbursement_type' => :'Object',
        :'number_of_tranches' => :'Object',
        :'end_borrower_amount' => :'Object',
        :'existing_lender_amount' => :'Object',
        :'principal_amount' => :'Object',
        :'interest_rate' => :'Object',
        :'interest_type' => :'Object',
        :'tenure' => :'Object',
        :'tenure_frequency' => :'Object',
        :'repayment_frequency' => :'Object',
        :'number_of_repayments' => :'Object',
        :'first_repayment_date' => :'Object',
        :'repayment_mode' => :'Object',
        :'advance_emi' => :'Object',
        :'umrn' => :'Object',
        :'interest_start_date' => :'Object',
        :'differential_interest' => :'Object',
        :'processing_fee' => :'Object',
        :'stamp_duty' => :'Object',
        :'insurance_charges' => :'Object',
        :'documentation_charges' => :'Object',
        :'other_charges' => :'Object',
        :'loan_plr_type' => :'Object',
        :'loan_plr_rate' => :'Object',
        :'spread_id' => :'Object',
        :'loan_emi' => :'Object',
        :'rcu_status' => :'Object',
        :'surrogate' => :'Object',
        :'sub_class' => :'Object',
        :'weaker_section' => :'Object',
        :'disbursement_accounts' => :'Object',
        :'assets' => :'Object',
        :'references' => :'Object',
        :'insurance_details' => :'Object',
        :'psl_flag' => :'Object',
        :'psl_description' => :'Object',
        :'psl_code' => :'Object',
        :'psl_proof_link' => :'Object',
        :'psl_proof_link_password' => :'Object',
        :'tranches' => :'Object',
        :'linked_loan_infos' => :'Object',
        :'sourcing_detail' => :'Object',
        :'consumer_durable' => :'Object',
        :'deviation_details' => :'Object'
      }
    end

    # List of attributes with nullable: true
    def self.openapi_nullable
      Set.new([
      ])
    end
  
    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(attributes = {})
      if (!attributes.is_a?(Hash))
        fail ArgumentError, "The input argument (attributes) must be a hash in `Colending::BodyCreateLoan` initialize method"
      end

      # check to see if the attribute exists and convert string to symbol for hash key
      attributes = attributes.each_with_object({}) { |(k, v), h|
        if (!self.class.attribute_map.key?(k.to_sym))
          fail ArgumentError, "`#{k}` is not a valid attribute in `Colending::BodyCreateLoan`. Please check the name to make sure it's valid. List of attributes: " + self.class.attribute_map.keys.inspect
        end
        h[k.to_sym] = v
      }

      if attributes.key?(:'customer_type')
        self.customer_type = attributes[:'customer_type']
      end

      if attributes.key?(:'customer_category')
        self.customer_category = attributes[:'customer_category']
      end

      if attributes.key?(:'client_customer_id')
        self.client_customer_id = attributes[:'client_customer_id']
      end

      if attributes.key?(:'title')
        self.title = attributes[:'title']
      end

      if attributes.key?(:'first_name')
        self.first_name = attributes[:'first_name']
      end

      if attributes.key?(:'middle_name')
        self.middle_name = attributes[:'middle_name']
      end

      if attributes.key?(:'last_name')
        self.last_name = attributes[:'last_name']
      end

      if attributes.key?(:'gender')
        self.gender = attributes[:'gender']
      end

      if attributes.key?(:'date_of_birth')
        self.date_of_birth = attributes[:'date_of_birth']
      end

      if attributes.key?(:'age')
        self.age = attributes[:'age']
      end

      if attributes.key?(:'mobile_number')
        self.mobile_number = attributes[:'mobile_number']
      end

      if attributes.key?(:'phone_number')
        self.phone_number = attributes[:'phone_number']
      end

      if attributes.key?(:'email')
        self.email = attributes[:'email']
      end

      if attributes.key?(:'official_email_id')
        self.official_email_id = attributes[:'official_email_id']
      end

      if attributes.key?(:'place_of_birth')
        self.place_of_birth = attributes[:'place_of_birth']
      end

      if attributes.key?(:'current_address')
        self.current_address = attributes[:'current_address']
      end

      if attributes.key?(:'current_village')
        self.current_village = attributes[:'current_village']
      end

      if attributes.key?(:'current_city_tier')
        self.current_city_tier = attributes[:'current_city_tier']
      end

      if attributes.key?(:'current_city')
        self.current_city = attributes[:'current_city']
      end

      if attributes.key?(:'current_district')
        self.current_district = attributes[:'current_district']
      end

      if attributes.key?(:'current_state')
        self.current_state = attributes[:'current_state']
      end

      if attributes.key?(:'current_country')
        self.current_country = attributes[:'current_country']
      end

      if attributes.key?(:'current_pincode')
        self.current_pincode = attributes[:'current_pincode']
      end

      if attributes.key?(:'residence_type_current_address')
        self.residence_type_current_address = attributes[:'residence_type_current_address']
      end

      if attributes.key?(:'years_of_stay_in_current_address')
        self.years_of_stay_in_current_address = attributes[:'years_of_stay_in_current_address']
      end

      if attributes.key?(:'permanent_address')
        self.permanent_address = attributes[:'permanent_address']
      end

      if attributes.key?(:'permanent_city')
        self.permanent_city = attributes[:'permanent_city']
      end

      if attributes.key?(:'permanent_city_tier')
        self.permanent_city_tier = attributes[:'permanent_city_tier']
      end

      if attributes.key?(:'permanent_district')
        self.permanent_district = attributes[:'permanent_district']
      end

      if attributes.key?(:'permanent_state')
        self.permanent_state = attributes[:'permanent_state']
      end

      if attributes.key?(:'permanent_pincode')
        self.permanent_pincode = attributes[:'permanent_pincode']
      end

      if attributes.key?(:'residence_type_permanent_address')
        self.residence_type_permanent_address = attributes[:'residence_type_permanent_address']
      end

      if attributes.key?(:'years_of_stay_in_permanent_address')
        self.years_of_stay_in_permanent_address = attributes[:'years_of_stay_in_permanent_address']
      end

      if attributes.key?(:'mailing_address')
        self.mailing_address = attributes[:'mailing_address']
      end

      if attributes.key?(:'marital_status')
        self.marital_status = attributes[:'marital_status']
      end

      if attributes.key?(:'religion')
        self.religion = attributes[:'religion']
      end

      if attributes.key?(:'nationality')
        self.nationality = attributes[:'nationality']
      end

      if attributes.key?(:'father_name')
        self.father_name = attributes[:'father_name']
      end

      if attributes.key?(:'mother_name')
        self.mother_name = attributes[:'mother_name']
      end

      if attributes.key?(:'spouse_name')
        self.spouse_name = attributes[:'spouse_name']
      end

      if attributes.key?(:'education_qualification')
        self.education_qualification = attributes[:'education_qualification']
      end

      if attributes.key?(:'net_monthly_income')
        self.net_monthly_income = attributes[:'net_monthly_income']
      end

      if attributes.key?(:'annual_income')
        self.annual_income = attributes[:'annual_income']
      end

      if attributes.key?(:'no_of_dependants')
        self.no_of_dependants = attributes[:'no_of_dependants']
      end

      if attributes.key?(:'occupation')
        self.occupation = attributes[:'occupation']
      end

      if attributes.key?(:'partner_score_on_the_customer')
        self.partner_score_on_the_customer = attributes[:'partner_score_on_the_customer']
      end

      if attributes.key?(:'politically_exposed')
        self.politically_exposed = attributes[:'politically_exposed']
      end

      if attributes.key?(:'income_source')
        self.income_source = attributes[:'income_source']
      end

      if attributes.key?(:'applicant_profession')
        self.applicant_profession = attributes[:'applicant_profession']
      end

      if attributes.key?(:'caution_negative_profile')
        self.caution_negative_profile = attributes[:'caution_negative_profile']
      end

      if attributes.key?(:'udyam_number')
        self.udyam_number = attributes[:'udyam_number']
      end

      if attributes.key?(:'pan_check')
        self.pan_check = attributes[:'pan_check']
      end

      if attributes.key?(:'dedupe_status')
        self.dedupe_status = attributes[:'dedupe_status']
      end

      if attributes.key?(:'pan_number')
        self.pan_number = attributes[:'pan_number']
      end

      if attributes.key?(:'pan_number_link')
        if (value = attributes[:'pan_number_link']).is_a?(Array)
          self.pan_number_link = value
        end
      end

      if attributes.key?(:'pan_number_link_password')
        self.pan_number_link_password = attributes[:'pan_number_link_password']
      end

      if attributes.key?(:'form_60_link')
        if (value = attributes[:'form_60_link']).is_a?(Array)
          self.form_60_link = value
        end
      end

      if attributes.key?(:'form_60_link_password')
        self.form_60_link_password = attributes[:'form_60_link_password']
      end

      if attributes.key?(:'aadhar_number')
        self.aadhar_number = attributes[:'aadhar_number']
      end

      if attributes.key?(:'aadhar_number_link')
        if (value = attributes[:'aadhar_number_link']).is_a?(Array)
          self.aadhar_number_link = value
        end
      end

      if attributes.key?(:'aadhar_number_link_password')
        self.aadhar_number_link_password = attributes[:'aadhar_number_link_password']
      end

      if attributes.key?(:'voter_id_number')
        self.voter_id_number = attributes[:'voter_id_number']
      end

      if attributes.key?(:'voting_id_link')
        if (value = attributes[:'voting_id_link']).is_a?(Array)
          self.voting_id_link = value
        end
      end

      if attributes.key?(:'voting_id_link_password')
        self.voting_id_link_password = attributes[:'voting_id_link_password']
      end

      if attributes.key?(:'driving_license_number')
        self.driving_license_number = attributes[:'driving_license_number']
      end

      if attributes.key?(:'driving_license_number_link')
        if (value = attributes[:'driving_license_number_link']).is_a?(Array)
          self.driving_license_number_link = value
        end
      end

      if attributes.key?(:'driving_license_number_link_password')
        self.driving_license_number_link_password = attributes[:'driving_license_number_link_password']
      end

      if attributes.key?(:'driving_license_expiry_date')
        self.driving_license_expiry_date = attributes[:'driving_license_expiry_date']
      end

      if attributes.key?(:'passport_number')
        self.passport_number = attributes[:'passport_number']
      end

      if attributes.key?(:'passport_number_link')
        if (value = attributes[:'passport_number_link']).is_a?(Array)
          self.passport_number_link = value
        end
      end

      if attributes.key?(:'passport_number_link_password')
        self.passport_number_link_password = attributes[:'passport_number_link_password']
      end

      if attributes.key?(:'video_image_link')
        if (value = attributes[:'video_image_link']).is_a?(Array)
          self.video_image_link = value
        end
      end

      if attributes.key?(:'video_image_link_password')
        self.video_image_link_password = attributes[:'video_image_link_password']
      end

      if attributes.key?(:'video_kyc_detail')
        self.video_kyc_detail = attributes[:'video_kyc_detail']
      end

      if attributes.key?(:'other_kyc_number')
        self.other_kyc_number = attributes[:'other_kyc_number']
      end

      if attributes.key?(:'other_kyc_link')
        if (value = attributes[:'other_kyc_link']).is_a?(Array)
          self.other_kyc_link = value
        end
      end

      if attributes.key?(:'other_kyc_link_password')
        self.other_kyc_link_password = attributes[:'other_kyc_link_password']
      end

      if attributes.key?(:'rent_agreement_link')
        if (value = attributes[:'rent_agreement_link']).is_a?(Array)
          self.rent_agreement_link = value
        end
      end

      if attributes.key?(:'rent_agreement_link_password')
        self.rent_agreement_link_password = attributes[:'rent_agreement_link_password']
      end

      if attributes.key?(:'utility_bills_link')
        if (value = attributes[:'utility_bills_link']).is_a?(Array)
          self.utility_bills_link = value
        end
      end

      if attributes.key?(:'utility_bills_link_password')
        self.utility_bills_link_password = attributes[:'utility_bills_link_password']
      end

      if attributes.key?(:'photo_link')
        if (value = attributes[:'photo_link']).is_a?(Array)
          self.photo_link = value
        end
      end

      if attributes.key?(:'photo_link_password')
        self.photo_link_password = attributes[:'photo_link_password']
      end

      if attributes.key?(:'employer_tier')
        self.employer_tier = attributes[:'employer_tier']
      end

      if attributes.key?(:'employer_category')
        self.employer_category = attributes[:'employer_category']
      end

      if attributes.key?(:'employment_type')
        self.employment_type = attributes[:'employment_type']
      end

      if attributes.key?(:'employment_details_name')
        self.employment_details_name = attributes[:'employment_details_name']
      end

      if attributes.key?(:'employment_details_address')
        self.employment_details_address = attributes[:'employment_details_address']
      end

      if attributes.key?(:'employment_details_years_of_experience')
        self.employment_details_years_of_experience = attributes[:'employment_details_years_of_experience']
      end

      if attributes.key?(:'employment_details_designation')
        self.employment_details_designation = attributes[:'employment_details_designation']
      end

      if attributes.key?(:'employement_vintage_current_organisation')
        self.employement_vintage_current_organisation = attributes[:'employement_vintage_current_organisation']
      end

      if attributes.key?(:'total_work_experience')
        self.total_work_experience = attributes[:'total_work_experience']
      end

      if attributes.key?(:'payslip_link')
        if (value = attributes[:'payslip_link']).is_a?(Array)
          self.payslip_link = value
        end
      end

      if attributes.key?(:'payslip_link_password')
        self.payslip_link_password = attributes[:'payslip_link_password']
      end

      if attributes.key?(:'tds_certificate_link')
        if (value = attributes[:'tds_certificate_link']).is_a?(Array)
          self.tds_certificate_link = value
        end
      end

      if attributes.key?(:'tds_certificate_link_password')
        self.tds_certificate_link_password = attributes[:'tds_certificate_link_password']
      end

      if attributes.key?(:'business')
        self.business = attributes[:'business']
      end

      if attributes.key?(:'guarantors')
        if (value = attributes[:'guarantors']).is_a?(Array)
          self.guarantors = value
        end
      end

      if attributes.key?(:'co_applicants')
        if (value = attributes[:'co_applicants']).is_a?(Array)
          self.co_applicants = value
        end
      end

      if attributes.key?(:'bank_statement')
        self.bank_statement = attributes[:'bank_statement']
      end

      if attributes.key?(:'name_of_bureau')
        self.name_of_bureau = attributes[:'name_of_bureau']
      end

      if attributes.key?(:'bureau_vintage')
        self.bureau_vintage = attributes[:'bureau_vintage']
      end

      if attributes.key?(:'bureau_score')
        self.bureau_score = attributes[:'bureau_score']
      end

      if attributes.key?(:'bureau_report_json_link')
        if (value = attributes[:'bureau_report_json_link']).is_a?(Array)
          self.bureau_report_json_link = value
        end
      end

      if attributes.key?(:'bureau_report_json_link_password')
        self.bureau_report_json_link_password = attributes[:'bureau_report_json_link_password']
      end

      if attributes.key?(:'bureau_json_link')
        if (value = attributes[:'bureau_json_link']).is_a?(Array)
          self.bureau_json_link = value
        end
      end

      if attributes.key?(:'bureau_json_link_password')
        self.bureau_json_link_password = attributes[:'bureau_json_link_password']
      end

      if attributes.key?(:'bureau_json')
        if (value = attributes[:'bureau_json']).is_a?(Array)
          self.bureau_json = value
        end
      end

      if attributes.key?(:'commercial_bureau_score')
        self.commercial_bureau_score = attributes[:'commercial_bureau_score']
      end

      if attributes.key?(:'commercial_bureau_score_link')
        if (value = attributes[:'commercial_bureau_score_link']).is_a?(Array)
          self.commercial_bureau_score_link = value
        end
      end

      if attributes.key?(:'commercial_bureau_score_link_password')
        self.commercial_bureau_score_link_password = attributes[:'commercial_bureau_score_link_password']
      end

      if attributes.key?(:'partner_score_on_the_customer_including_bureau_report')
        self.partner_score_on_the_customer_including_bureau_report = attributes[:'partner_score_on_the_customer_including_bureau_report']
      end

      if attributes.key?(:'total_existing_obligations')
        self.total_existing_obligations = attributes[:'total_existing_obligations']
      end

      if attributes.key?(:'credit_card_limit')
        self.credit_card_limit = attributes[:'credit_card_limit']
      end

      if attributes.key?(:'no_of_credit_cards')
        self.no_of_credit_cards = attributes[:'no_of_credit_cards']
      end

      if attributes.key?(:'total_number_of_unsecured_loans')
        self.total_number_of_unsecured_loans = attributes[:'total_number_of_unsecured_loans']
      end

      if attributes.key?(:'value_of_total_unsecured_loans')
        self.value_of_total_unsecured_loans = attributes[:'value_of_total_unsecured_loans']
      end

      if attributes.key?(:'total_number_of_loans')
        self.total_number_of_loans = attributes[:'total_number_of_loans']
      end

      if attributes.key?(:'value_of_total_loans')
        self.value_of_total_loans = attributes[:'value_of_total_loans']
      end

      if attributes.key?(:'number_of_enquiries_3months')
        self.number_of_enquiries_3months = attributes[:'number_of_enquiries_3months']
      end

      if attributes.key?(:'number_of_enquiries_6months')
        self.number_of_enquiries_6months = attributes[:'number_of_enquiries_6months']
      end

      if attributes.key?(:'number_of_enquiries_12months')
        self.number_of_enquiries_12months = attributes[:'number_of_enquiries_12months']
      end

      if attributes.key?(:'number_of_writeoff_suitfiled_settled_in_the_last_12_months')
        self.number_of_writeoff_suitfiled_settled_in_the_last_12_months = attributes[:'number_of_writeoff_suitfiled_settled_in_the_last_12_months']
      end

      if attributes.key?(:'max_dpd_tradeline_last_12months')
        self.max_dpd_tradeline_last_12months = attributes[:'max_dpd_tradeline_last_12months']
      end

      if attributes.key?(:'max_overdue_tradeline')
        self.max_overdue_tradeline = attributes[:'max_overdue_tradeline']
      end

      if attributes.key?(:'total_overdue_amount_in_last_12m')
        self.total_overdue_amount_in_last_12m = attributes[:'total_overdue_amount_in_last_12m']
      end

      if attributes.key?(:'amount_of_loan_settled_in_last_12m')
        self.amount_of_loan_settled_in_last_12m = attributes[:'amount_of_loan_settled_in_last_12m']
      end

      if attributes.key?(:'nature_of_loan_settled1')
        self.nature_of_loan_settled1 = attributes[:'nature_of_loan_settled1']
      end

      if attributes.key?(:'nature_of_loan_settled2')
        self.nature_of_loan_settled2 = attributes[:'nature_of_loan_settled2']
      end

      if attributes.key?(:'total_emi_bounces')
        self.total_emi_bounces = attributes[:'total_emi_bounces']
      end

      if attributes.key?(:'bounces_in_last_6m')
        self.bounces_in_last_6m = attributes[:'bounces_in_last_6m']
      end

      if attributes.key?(:'bounces_in_last_12m')
        self.bounces_in_last_12m = attributes[:'bounces_in_last_12m']
      end

      if attributes.key?(:'bureau_validity_date')
        self.bureau_validity_date = attributes[:'bureau_validity_date']
      end

      if attributes.key?(:'financial_data')
        self.financial_data = attributes[:'financial_data']
      end

      if attributes.key?(:'abb_emi_ratio')
        self.abb_emi_ratio = attributes[:'abb_emi_ratio']
      end

      if attributes.key?(:'dscr')
        self.dscr = attributes[:'dscr']
      end

      if attributes.key?(:'foir')
        self.foir = attributes[:'foir']
      end

      if attributes.key?(:'ltr')
        self.ltr = attributes[:'ltr']
      end

      if attributes.key?(:'insr')
        self.insr = attributes[:'insr']
      end

      if attributes.key?(:'eligibility_as_per_insr')
        self.eligibility_as_per_insr = attributes[:'eligibility_as_per_insr']
      end

      if attributes.key?(:'eligibility_as_per_foir')
        self.eligibility_as_per_foir = attributes[:'eligibility_as_per_foir']
      end

      if attributes.key?(:'eligibility_as_per_ltv')
        self.eligibility_as_per_ltv = attributes[:'eligibility_as_per_ltv']
      end

      if attributes.key?(:'eligibility_loan_amount')
        self.eligibility_loan_amount = attributes[:'eligibility_loan_amount']
      end

      if attributes.key?(:'fcf')
        self.fcf = attributes[:'fcf']
      end

      if attributes.key?(:'emi_obligations')
        self.emi_obligations = attributes[:'emi_obligations']
      end

      if attributes.key?(:'viability_ratio')
        self.viability_ratio = attributes[:'viability_ratio']
      end

      if attributes.key?(:'product_id')
        self.product_id = attributes[:'product_id']
      end

      if attributes.key?(:'client_loan_id')
        self.client_loan_id = attributes[:'client_loan_id']
      end

      if attributes.key?(:'application_id')
        self.application_id = attributes[:'application_id']
      end

      if attributes.key?(:'loan_cycle')
        self.loan_cycle = attributes[:'loan_cycle']
      end

      if attributes.key?(:'partner_branch_code')
        self.partner_branch_code = attributes[:'partner_branch_code']
      end

      if attributes.key?(:'partner_branch_name')
        self.partner_branch_name = attributes[:'partner_branch_name']
      end

      if attributes.key?(:'product_type')
        self.product_type = attributes[:'product_type']
      end

      if attributes.key?(:'partner_product_code')
        self.partner_product_code = attributes[:'partner_product_code']
      end

      if attributes.key?(:'partner_scheme_code')
        self.partner_scheme_code = attributes[:'partner_scheme_code']
      end

      if attributes.key?(:'category')
        self.category = attributes[:'category']
      end

      if attributes.key?(:'sub_category')
        self.sub_category = attributes[:'sub_category']
      end

      if attributes.key?(:'purpose')
        self.purpose = attributes[:'purpose']
      end

      if attributes.key?(:'disbursement_type')
        self.disbursement_type = attributes[:'disbursement_type']
      end

      if attributes.key?(:'number_of_tranches')
        self.number_of_tranches = attributes[:'number_of_tranches']
      end

      if attributes.key?(:'end_borrower_amount')
        self.end_borrower_amount = attributes[:'end_borrower_amount']
      end

      if attributes.key?(:'existing_lender_amount')
        self.existing_lender_amount = attributes[:'existing_lender_amount']
      end

      if attributes.key?(:'principal_amount')
        self.principal_amount = attributes[:'principal_amount']
      end

      if attributes.key?(:'interest_rate')
        self.interest_rate = attributes[:'interest_rate']
      end

      if attributes.key?(:'interest_type')
        self.interest_type = attributes[:'interest_type']
      end

      if attributes.key?(:'tenure')
        self.tenure = attributes[:'tenure']
      end

      if attributes.key?(:'tenure_frequency')
        self.tenure_frequency = attributes[:'tenure_frequency']
      end

      if attributes.key?(:'repayment_frequency')
        self.repayment_frequency = attributes[:'repayment_frequency']
      end

      if attributes.key?(:'number_of_repayments')
        self.number_of_repayments = attributes[:'number_of_repayments']
      end

      if attributes.key?(:'first_repayment_date')
        self.first_repayment_date = attributes[:'first_repayment_date']
      end

      if attributes.key?(:'repayment_mode')
        self.repayment_mode = attributes[:'repayment_mode']
      end

      if attributes.key?(:'advance_emi')
        self.advance_emi = attributes[:'advance_emi']
      end

      if attributes.key?(:'umrn')
        self.umrn = attributes[:'umrn']
      end

      if attributes.key?(:'interest_start_date')
        self.interest_start_date = attributes[:'interest_start_date']
      end

      if attributes.key?(:'differential_interest')
        self.differential_interest = attributes[:'differential_interest']
      end

      if attributes.key?(:'processing_fee')
        self.processing_fee = attributes[:'processing_fee']
      end

      if attributes.key?(:'stamp_duty')
        self.stamp_duty = attributes[:'stamp_duty']
      end

      if attributes.key?(:'insurance_charges')
        self.insurance_charges = attributes[:'insurance_charges']
      end

      if attributes.key?(:'documentation_charges')
        self.documentation_charges = attributes[:'documentation_charges']
      end

      if attributes.key?(:'other_charges')
        self.other_charges = attributes[:'other_charges']
      end

      if attributes.key?(:'loan_plr_type')
        self.loan_plr_type = attributes[:'loan_plr_type']
      end

      if attributes.key?(:'loan_plr_rate')
        self.loan_plr_rate = attributes[:'loan_plr_rate']
      end

      if attributes.key?(:'spread_id')
        self.spread_id = attributes[:'spread_id']
      end

      if attributes.key?(:'loan_emi')
        self.loan_emi = attributes[:'loan_emi']
      end

      if attributes.key?(:'rcu_status')
        self.rcu_status = attributes[:'rcu_status']
      end

      if attributes.key?(:'surrogate')
        self.surrogate = attributes[:'surrogate']
      end

      if attributes.key?(:'sub_class')
        self.sub_class = attributes[:'sub_class']
      end

      if attributes.key?(:'weaker_section')
        self.weaker_section = attributes[:'weaker_section']
      end

      if attributes.key?(:'disbursement_accounts')
        if (value = attributes[:'disbursement_accounts']).is_a?(Array)
          self.disbursement_accounts = value
        end
      end

      if attributes.key?(:'assets')
        if (value = attributes[:'assets']).is_a?(Array)
          self.assets = value
        end
      end

      if attributes.key?(:'references')
        if (value = attributes[:'references']).is_a?(Array)
          self.references = value
        end
      end

      if attributes.key?(:'insurance_details')
        if (value = attributes[:'insurance_details']).is_a?(Array)
          self.insurance_details = value
        end
      end

      if attributes.key?(:'psl_flag')
        self.psl_flag = attributes[:'psl_flag']
      end

      if attributes.key?(:'psl_description')
        self.psl_description = attributes[:'psl_description']
      end

      if attributes.key?(:'psl_code')
        self.psl_code = attributes[:'psl_code']
      end

      if attributes.key?(:'psl_proof_link')
        if (value = attributes[:'psl_proof_link']).is_a?(Array)
          self.psl_proof_link = value
        end
      end

      if attributes.key?(:'psl_proof_link_password')
        self.psl_proof_link_password = attributes[:'psl_proof_link_password']
      end

      if attributes.key?(:'tranches')
        if (value = attributes[:'tranches']).is_a?(Array)
          self.tranches = value
        end
      end

      if attributes.key?(:'linked_loan_infos')
        if (value = attributes[:'linked_loan_infos']).is_a?(Array)
          self.linked_loan_infos = value
        end
      end

      if attributes.key?(:'sourcing_detail')
        self.sourcing_detail = attributes[:'sourcing_detail']
      end

      if attributes.key?(:'consumer_durable')
        self.consumer_durable = attributes[:'consumer_durable']
      end

      if attributes.key?(:'deviation_details')
        if (value = attributes[:'deviation_details']).is_a?(Array)
          self.deviation_details = value
        end
      end
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties
      invalid_properties = Array.new
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid?
      true
    end

    # Checks equality by comparing each attribute.
    # @param [Object] Object to be compared
    def ==(o)
      return true if self.equal?(o)
      self.class == o.class &&
          customer_type == o.customer_type &&
          customer_category == o.customer_category &&
          client_customer_id == o.client_customer_id &&
          title == o.title &&
          first_name == o.first_name &&
          middle_name == o.middle_name &&
          last_name == o.last_name &&
          gender == o.gender &&
          date_of_birth == o.date_of_birth &&
          age == o.age &&
          mobile_number == o.mobile_number &&
          phone_number == o.phone_number &&
          email == o.email &&
          official_email_id == o.official_email_id &&
          place_of_birth == o.place_of_birth &&
          current_address == o.current_address &&
          current_village == o.current_village &&
          current_city_tier == o.current_city_tier &&
          current_city == o.current_city &&
          current_district == o.current_district &&
          current_state == o.current_state &&
          current_country == o.current_country &&
          current_pincode == o.current_pincode &&
          residence_type_current_address == o.residence_type_current_address &&
          years_of_stay_in_current_address == o.years_of_stay_in_current_address &&
          permanent_address == o.permanent_address &&
          permanent_city == o.permanent_city &&
          permanent_city_tier == o.permanent_city_tier &&
          permanent_district == o.permanent_district &&
          permanent_state == o.permanent_state &&
          permanent_pincode == o.permanent_pincode &&
          residence_type_permanent_address == o.residence_type_permanent_address &&
          years_of_stay_in_permanent_address == o.years_of_stay_in_permanent_address &&
          mailing_address == o.mailing_address &&
          marital_status == o.marital_status &&
          religion == o.religion &&
          nationality == o.nationality &&
          father_name == o.father_name &&
          mother_name == o.mother_name &&
          spouse_name == o.spouse_name &&
          education_qualification == o.education_qualification &&
          net_monthly_income == o.net_monthly_income &&
          annual_income == o.annual_income &&
          no_of_dependants == o.no_of_dependants &&
          occupation == o.occupation &&
          partner_score_on_the_customer == o.partner_score_on_the_customer &&
          politically_exposed == o.politically_exposed &&
          income_source == o.income_source &&
          applicant_profession == o.applicant_profession &&
          caution_negative_profile == o.caution_negative_profile &&
          udyam_number == o.udyam_number &&
          pan_check == o.pan_check &&
          dedupe_status == o.dedupe_status &&
          pan_number == o.pan_number &&
          pan_number_link == o.pan_number_link &&
          pan_number_link_password == o.pan_number_link_password &&
          form_60_link == o.form_60_link &&
          form_60_link_password == o.form_60_link_password &&
          aadhar_number == o.aadhar_number &&
          aadhar_number_link == o.aadhar_number_link &&
          aadhar_number_link_password == o.aadhar_number_link_password &&
          voter_id_number == o.voter_id_number &&
          voting_id_link == o.voting_id_link &&
          voting_id_link_password == o.voting_id_link_password &&
          driving_license_number == o.driving_license_number &&
          driving_license_number_link == o.driving_license_number_link &&
          driving_license_number_link_password == o.driving_license_number_link_password &&
          driving_license_expiry_date == o.driving_license_expiry_date &&
          passport_number == o.passport_number &&
          passport_number_link == o.passport_number_link &&
          passport_number_link_password == o.passport_number_link_password &&
          video_image_link == o.video_image_link &&
          video_image_link_password == o.video_image_link_password &&
          video_kyc_detail == o.video_kyc_detail &&
          other_kyc_number == o.other_kyc_number &&
          other_kyc_link == o.other_kyc_link &&
          other_kyc_link_password == o.other_kyc_link_password &&
          rent_agreement_link == o.rent_agreement_link &&
          rent_agreement_link_password == o.rent_agreement_link_password &&
          utility_bills_link == o.utility_bills_link &&
          utility_bills_link_password == o.utility_bills_link_password &&
          photo_link == o.photo_link &&
          photo_link_password == o.photo_link_password &&
          employer_tier == o.employer_tier &&
          employer_category == o.employer_category &&
          employment_type == o.employment_type &&
          employment_details_name == o.employment_details_name &&
          employment_details_address == o.employment_details_address &&
          employment_details_years_of_experience == o.employment_details_years_of_experience &&
          employment_details_designation == o.employment_details_designation &&
          employement_vintage_current_organisation == o.employement_vintage_current_organisation &&
          total_work_experience == o.total_work_experience &&
          payslip_link == o.payslip_link &&
          payslip_link_password == o.payslip_link_password &&
          tds_certificate_link == o.tds_certificate_link &&
          tds_certificate_link_password == o.tds_certificate_link_password &&
          business == o.business &&
          guarantors == o.guarantors &&
          co_applicants == o.co_applicants &&
          bank_statement == o.bank_statement &&
          name_of_bureau == o.name_of_bureau &&
          bureau_vintage == o.bureau_vintage &&
          bureau_score == o.bureau_score &&
          bureau_report_json_link == o.bureau_report_json_link &&
          bureau_report_json_link_password == o.bureau_report_json_link_password &&
          bureau_json_link == o.bureau_json_link &&
          bureau_json_link_password == o.bureau_json_link_password &&
          bureau_json == o.bureau_json &&
          commercial_bureau_score == o.commercial_bureau_score &&
          commercial_bureau_score_link == o.commercial_bureau_score_link &&
          commercial_bureau_score_link_password == o.commercial_bureau_score_link_password &&
          partner_score_on_the_customer_including_bureau_report == o.partner_score_on_the_customer_including_bureau_report &&
          total_existing_obligations == o.total_existing_obligations &&
          credit_card_limit == o.credit_card_limit &&
          no_of_credit_cards == o.no_of_credit_cards &&
          total_number_of_unsecured_loans == o.total_number_of_unsecured_loans &&
          value_of_total_unsecured_loans == o.value_of_total_unsecured_loans &&
          total_number_of_loans == o.total_number_of_loans &&
          value_of_total_loans == o.value_of_total_loans &&
          number_of_enquiries_3months == o.number_of_enquiries_3months &&
          number_of_enquiries_6months == o.number_of_enquiries_6months &&
          number_of_enquiries_12months == o.number_of_enquiries_12months &&
          number_of_writeoff_suitfiled_settled_in_the_last_12_months == o.number_of_writeoff_suitfiled_settled_in_the_last_12_months &&
          max_dpd_tradeline_last_12months == o.max_dpd_tradeline_last_12months &&
          max_overdue_tradeline == o.max_overdue_tradeline &&
          total_overdue_amount_in_last_12m == o.total_overdue_amount_in_last_12m &&
          amount_of_loan_settled_in_last_12m == o.amount_of_loan_settled_in_last_12m &&
          nature_of_loan_settled1 == o.nature_of_loan_settled1 &&
          nature_of_loan_settled2 == o.nature_of_loan_settled2 &&
          total_emi_bounces == o.total_emi_bounces &&
          bounces_in_last_6m == o.bounces_in_last_6m &&
          bounces_in_last_12m == o.bounces_in_last_12m &&
          bureau_validity_date == o.bureau_validity_date &&
          financial_data == o.financial_data &&
          abb_emi_ratio == o.abb_emi_ratio &&
          dscr == o.dscr &&
          foir == o.foir &&
          ltr == o.ltr &&
          insr == o.insr &&
          eligibility_as_per_insr == o.eligibility_as_per_insr &&
          eligibility_as_per_foir == o.eligibility_as_per_foir &&
          eligibility_as_per_ltv == o.eligibility_as_per_ltv &&
          eligibility_loan_amount == o.eligibility_loan_amount &&
          fcf == o.fcf &&
          emi_obligations == o.emi_obligations &&
          viability_ratio == o.viability_ratio &&
          product_id == o.product_id &&
          client_loan_id == o.client_loan_id &&
          application_id == o.application_id &&
          loan_cycle == o.loan_cycle &&
          partner_branch_code == o.partner_branch_code &&
          partner_branch_name == o.partner_branch_name &&
          product_type == o.product_type &&
          partner_product_code == o.partner_product_code &&
          partner_scheme_code == o.partner_scheme_code &&
          category == o.category &&
          sub_category == o.sub_category &&
          purpose == o.purpose &&
          disbursement_type == o.disbursement_type &&
          number_of_tranches == o.number_of_tranches &&
          end_borrower_amount == o.end_borrower_amount &&
          existing_lender_amount == o.existing_lender_amount &&
          principal_amount == o.principal_amount &&
          interest_rate == o.interest_rate &&
          interest_type == o.interest_type &&
          tenure == o.tenure &&
          tenure_frequency == o.tenure_frequency &&
          repayment_frequency == o.repayment_frequency &&
          number_of_repayments == o.number_of_repayments &&
          first_repayment_date == o.first_repayment_date &&
          repayment_mode == o.repayment_mode &&
          advance_emi == o.advance_emi &&
          umrn == o.umrn &&
          interest_start_date == o.interest_start_date &&
          differential_interest == o.differential_interest &&
          processing_fee == o.processing_fee &&
          stamp_duty == o.stamp_duty &&
          insurance_charges == o.insurance_charges &&
          documentation_charges == o.documentation_charges &&
          other_charges == o.other_charges &&
          loan_plr_type == o.loan_plr_type &&
          loan_plr_rate == o.loan_plr_rate &&
          spread_id == o.spread_id &&
          loan_emi == o.loan_emi &&
          rcu_status == o.rcu_status &&
          surrogate == o.surrogate &&
          sub_class == o.sub_class &&
          weaker_section == o.weaker_section &&
          disbursement_accounts == o.disbursement_accounts &&
          assets == o.assets &&
          references == o.references &&
          insurance_details == o.insurance_details &&
          psl_flag == o.psl_flag &&
          psl_description == o.psl_description &&
          psl_code == o.psl_code &&
          psl_proof_link == o.psl_proof_link &&
          psl_proof_link_password == o.psl_proof_link_password &&
          tranches == o.tranches &&
          linked_loan_infos == o.linked_loan_infos &&
          sourcing_detail == o.sourcing_detail &&
          consumer_durable == o.consumer_durable &&
          deviation_details == o.deviation_details
    end

    # @see the `==` method
    # @param [Object] Object to be compared
    def eql?(o)
      self == o
    end

    # Calculates hash code according to all attributes.
    # @return [Integer] Hash code
    def hash
      [customer_type, customer_category, client_customer_id, title, first_name, middle_name, last_name, gender, date_of_birth, age, mobile_number, phone_number, email, official_email_id, place_of_birth, current_address, current_village, current_city_tier, current_city, current_district, current_state, current_country, current_pincode, residence_type_current_address, years_of_stay_in_current_address, permanent_address, permanent_city, permanent_city_tier, permanent_district, permanent_state, permanent_pincode, residence_type_permanent_address, years_of_stay_in_permanent_address, mailing_address, marital_status, religion, nationality, father_name, mother_name, spouse_name, education_qualification, net_monthly_income, annual_income, no_of_dependants, occupation, partner_score_on_the_customer, politically_exposed, income_source, applicant_profession, caution_negative_profile, udyam_number, pan_check, dedupe_status, pan_number, pan_number_link, pan_number_link_password, form_60_link, form_60_link_password, aadhar_number, aadhar_number_link, aadhar_number_link_password, voter_id_number, voting_id_link, voting_id_link_password, driving_license_number, driving_license_number_link, driving_license_number_link_password, driving_license_expiry_date, passport_number, passport_number_link, passport_number_link_password, video_image_link, video_image_link_password, video_kyc_detail, other_kyc_number, other_kyc_link, other_kyc_link_password, rent_agreement_link, rent_agreement_link_password, utility_bills_link, utility_bills_link_password, photo_link, photo_link_password, employer_tier, employer_category, employment_type, employment_details_name, employment_details_address, employment_details_years_of_experience, employment_details_designation, employement_vintage_current_organisation, total_work_experience, payslip_link, payslip_link_password, tds_certificate_link, tds_certificate_link_password, business, guarantors, co_applicants, bank_statement, name_of_bureau, bureau_vintage, bureau_score, bureau_report_json_link, bureau_report_json_link_password, bureau_json_link, bureau_json_link_password, bureau_json, commercial_bureau_score, commercial_bureau_score_link, commercial_bureau_score_link_password, partner_score_on_the_customer_including_bureau_report, total_existing_obligations, credit_card_limit, no_of_credit_cards, total_number_of_unsecured_loans, value_of_total_unsecured_loans, total_number_of_loans, value_of_total_loans, number_of_enquiries_3months, number_of_enquiries_6months, number_of_enquiries_12months, number_of_writeoff_suitfiled_settled_in_the_last_12_months, max_dpd_tradeline_last_12months, max_overdue_tradeline, total_overdue_amount_in_last_12m, amount_of_loan_settled_in_last_12m, nature_of_loan_settled1, nature_of_loan_settled2, total_emi_bounces, bounces_in_last_6m, bounces_in_last_12m, bureau_validity_date, financial_data, abb_emi_ratio, dscr, foir, ltr, insr, eligibility_as_per_insr, eligibility_as_per_foir, eligibility_as_per_ltv, eligibility_loan_amount, fcf, emi_obligations, viability_ratio, product_id, client_loan_id, application_id, loan_cycle, partner_branch_code, partner_branch_name, product_type, partner_product_code, partner_scheme_code, category, sub_category, purpose, disbursement_type, number_of_tranches, end_borrower_amount, existing_lender_amount, principal_amount, interest_rate, interest_type, tenure, tenure_frequency, repayment_frequency, number_of_repayments, first_repayment_date, repayment_mode, advance_emi, umrn, interest_start_date, differential_interest, processing_fee, stamp_duty, insurance_charges, documentation_charges, other_charges, loan_plr_type, loan_plr_rate, spread_id, loan_emi, rcu_status, surrogate, sub_class, weaker_section, disbursement_accounts, assets, references, insurance_details, psl_flag, psl_description, psl_code, psl_proof_link, psl_proof_link_password, tranches, linked_loan_infos, sourcing_detail, consumer_durable, deviation_details].hash
    end

    # Builds the object from hash
    # @param [Hash] attributes Model attributes in the form of hash
    # @return [Object] Returns the model itself
    def self.build_from_hash(attributes)
      new.build_from_hash(attributes)
    end

    # Builds the object from hash
    # @param [Hash] attributes Model attributes in the form of hash
    # @return [Object] Returns the model itself
    def build_from_hash(attributes)
      return nil unless attributes.is_a?(Hash)
      self.class.openapi_types.each_pair do |key, type|
        if type =~ /\AArray<(.*)>/i
          # check to ensure the input is an array given that the attribute
          # is documented as an array but the input is not
          if attributes[self.class.attribute_map[key]].is_a?(Array)
            self.send("#{key}=", attributes[self.class.attribute_map[key]].map { |v| _deserialize($1, v) })
          end
        elsif !attributes[self.class.attribute_map[key]].nil?
          self.send("#{key}=", _deserialize(type, attributes[self.class.attribute_map[key]]))
        elsif attributes[self.class.attribute_map[key]].nil? && self.class.openapi_nullable.include?(key)
          self.send("#{key}=", nil)
        end
      end

      self
    end

    # Deserializes the data based on type
    # @param string type Data type
    # @param string value Value to be deserialized
    # @return [Object] Deserialized data
    def _deserialize(type, value)
      case type.to_sym
      when :DateTime
        DateTime.parse(value)
      when :Date
        Date.parse(value)
      when :String
        value.to_s
      when :Integer
        value.to_i
      when :Float
        value.to_f
      when :Boolean
        if value.to_s =~ /\A(true|t|yes|y|1)\z/i
          true
        else
          false
        end
      when :Object
        # generic object (usually a Hash), return directly
        value
      when /\AArray<(?<inner_type>.+)>\z/
        inner_type = Regexp.last_match[:inner_type]
        value.map { |v| _deserialize(inner_type, v) }
      when /\AHash<(?<k_type>.+?), (?<v_type>.+)>\z/
        k_type = Regexp.last_match[:k_type]
        v_type = Regexp.last_match[:v_type]
        {}.tap do |hash|
          value.each do |k, v|
            hash[_deserialize(k_type, k)] = _deserialize(v_type, v)
          end
        end
      else # model
        Colending.const_get(type).build_from_hash(value)
      end
    end

    # Returns the string representation of the object
    # @return [String] String presentation of the object
    def to_s
      to_hash.to_s
    end

    # to_body is an alias to to_hash (backward compatibility)
    # @return [Hash] Returns the object in the form of hash
    def to_body
      to_hash
    end

    # Returns the object in the form of hash
    # @return [Hash] Returns the object in the form of hash
    def to_hash
      hash = {}
      self.class.attribute_map.each_pair do |attr, param|
        value = self.send(attr)
        if value.nil?
          is_nullable = self.class.openapi_nullable.include?(attr)
          next if !is_nullable || (is_nullable && !instance_variable_defined?(:"@#{attr}"))
        end

        hash[param] = _to_hash(value)
      end
      hash
    end

    # Outputs non-array value in the form of hash
    # For object, use to_hash. Otherwise, just return the value
    # @param [Object] value Any valid value
    # @return [Hash] Returns the value in the form of hash
    def _to_hash(value)
      if value.is_a?(Array)
        value.compact.map { |v| _to_hash(v) }
      elsif value.is_a?(Hash)
        {}.tap do |hash|
          value.each { |k, v| hash[k] = _to_hash(v) }
        end
      elsif value.respond_to? :to_hash
        value.to_hash
      else
        value
      end
    end  end
end
